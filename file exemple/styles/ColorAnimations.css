/* Color Animation Effects for the whole site */
:root {
  /* Animation timing variables - faster for more noticeable effects */
  --color-cycle-timing: 12s;
  --color-cycle-timing-fast: 6s;
  --color-cycle-timing-slow: 18s;
}

/* Global color cycling animation class that can be applied to any element */
.color-cycle-element {
  animation: globalColorCycle var(--color-cycle-timing) infinite alternate;
}

@keyframes globalColorCycle {
  0% {
    filter: hue-rotate(0deg) saturate(1.2);
  }
  20% {
    filter: hue-rotate(72deg) saturate(1.4);
  }
  40% {
    filter: hue-rotate(144deg) saturate(1.6);
  }
  60% {
    filter: hue-rotate(216deg) saturate(1.8);
  }
  80% {
    filter: hue-rotate(288deg) saturate(1.6);
  }
  100% {
    filter: hue-rotate(360deg) saturate(1.2);
  }
}

/* Text color cycling for headings or important text */
.color-cycle-text {
  background: linear-gradient(
    90deg,
    var(--primary-color),
    var(--secondary-color),
    var(--accent-color),
    var(--hover-color),
    var(--success-color),
    var(--primary-color)
  );
  background-size: 400% 100%;
  -webkit-background-clip: text;
  background-clip: text;
  -webkit-text-fill-color: transparent;
  animation: textGradientCycle var(--color-cycle-timing-fast) infinite; /* Faster animation and no alternate for continuous cycle */
}

@keyframes textGradientCycle {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Border color cycling for containers */
.color-cycle-border {
  position: relative;
}

.color-cycle-border::after {
  content: "";
  position: absolute;
  inset: 0;
  border: 2px solid transparent;
  border-radius: inherit;
  background: linear-gradient(
      90deg,
      var(--primary-color),
      var(--secondary-color),
      var(--accent-color),
      var(--hover-color),
      var(--primary-color)
    )
    border-box;
  -webkit-mask:
    linear-gradient(#fff 0 0) content-box,
    linear-gradient(#fff 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  background-size: 400% 100%;
  animation: borderCycle var(--color-cycle-timing) infinite alternate;
}

@keyframes borderCycle {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Shadow color cycling for elements with shadow */
.color-cycle-shadow {
  animation: shadowColorCycle var(--color-cycle-timing) infinite alternate;
}

@keyframes shadowColorCycle {
  0% {
    box-shadow: 0 10px 20px rgba(var(--card-bg-color-rgb), 0.2);
  }
  20% {
    box-shadow: 0 10px 25px rgba(160, 92, 47, 0.25); /* primary */
  }
  40% {
    box-shadow: 0 10px 25px rgba(227, 139, 79, 0.25); /* secondary */
  }
  60% {
    box-shadow: 0 10px 25px rgba(205, 133, 63, 0.25); /* accent */
  }
  80% {
    box-shadow: 0 10px 25px rgba(255, 64, 129, 0.25); /* hover */
  }
  100% {
    box-shadow: 0 10px 25px rgba(33, 150, 243, 0.25); /* info */
  }
}

/* Button color cycling for interactive elements */
.color-cycle-button {
  background-image: linear-gradient(
    90deg,
    var(--primary-color),
    var(--secondary-color),
    var(--accent-color),
    var(--hover-color),
    var(--primary-color)
  );
  background-size: 400% 100%;
  animation: buttonGradientCycle var(--color-cycle-timing-fast) infinite
    alternate;
}

@keyframes buttonGradientCycle {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

/* Card highlight effect with color cycling */
.color-cycle-card {
  position: relative;
  overflow: hidden;
}

.color-cycle-card::before {
  content: "";
  position: absolute;
  top: -50%;
  left: -50%;
  width: 200%;
  height: 200%;
  background: linear-gradient(
    to bottom right,
    rgba(var(--card-bg-color-rgb), 0),
    rgba(var(--card-bg-color-rgb), 0),
    rgba(var(--primary-color), 0.2),
    rgba(var(--card-bg-color-rgb), 0)
  );
  transform: rotate(30deg);
  animation:
    cardShine 5s ease-in-out infinite,
    cardColorCycle var(--color-cycle-timing-slow) infinite alternate;
  pointer-events: none;
}

@keyframes cardShine {
  0% {
    transform: rotate(30deg) translate(-200px, -100px);
  }
  100% {
    transform: rotate(30deg) translate(400px, 200px);
  }
}

@keyframes cardColorCycle {
  0% {
    background: linear-gradient(
      to bottom right,
      rgba(var(--card-bg-color-rgb), 0),
      rgba(var(--card-bg-color-rgb), 0),
      rgba(160, 92, 47, 0.2),
      rgba(var(--card-bg-color-rgb), 0)
    );
  }
  25% {
    background: linear-gradient(
      to bottom right,
      rgba(var(--card-bg-color-rgb), 0),
      rgba(var(--card-bg-color-rgb), 0),
      rgba(227, 139, 79, 0.2),
      rgba(var(--card-bg-color-rgb), 0)
    );
  }
  50% {
    background: linear-gradient(
      to bottom right,
      rgba(var(--card-bg-color-rgb), 0),
      rgba(var(--card-bg-color-rgb), 0),
      rgba(205, 133, 63, 0.2),
      rgba(var(--card-bg-color-rgb), 0)
    );
  }
  75% {
    background: linear-gradient(
      to bottom right,
      rgba(var(--card-bg-color-rgb), 0),
      rgba(var(--card-bg-color-rgb), 0),
      rgba(255, 64, 129, 0.2),
      rgba(var(--card-bg-color-rgb), 0)
    );
  }
  100% {
    background: linear-gradient(
      to bottom right,
      rgba(var(--card-bg-color-rgb), 0),
      rgba(var(--card-bg-color-rgb), 0),
      rgba(33, 150, 243, 0.2),
      rgba(var(--card-bg-color-rgb), 0)
    );
  }
}

/* Apply responsive adjustments */
@media (max-width: 768px) {
  :root {
    --color-cycle-timing: 15s;
    --color-cycle-timing-fast: 10s;
    --color-cycle-timing-slow: 25s;
  }
}
